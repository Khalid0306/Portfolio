<script
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
  crossorigin="anonymous"
></script>
<script
  type="text/javascript"
  src="https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js"
></script>
<script>
  console.log("Script started!");
  document.addEventListener("DOMContentLoaded", function () {
    // SHOW MENU ==== */
    const navMenu = document.getElementById("nav-menu");
    const navToggle = document.getElementById("nav-toggle");
    console.log(navToggle);
    const navClose = document.getElementById("nav-close");

    /*===== MENU SHOW =====*/
    /* Validate if constant exists */
    if (navToggle) {
      navToggle.addEventListener("click", () => {
        console.log("Toggle clicked");
        navMenu.classList.add("show-menu");
      });
    }

    /*===== MENU HIDDEN =====*/
    /* Validate if constant exists */
    if (navClose) {
      navClose.addEventListener("click", () => {
        navMenu.classList.remove("show-menu");
      });
    }

    console.log("Script loaded!");
  });

  /* ====== REMOVE MENU MOBILE ====== */
  const navLinks = document.querySelectorAll(".nav__link"); // Updated variable name
  const linkAction = () => {
    const navMenu = document.getElementById("nav-menu");
    // When we click on each nav__link, we remove the show-menu class
    navMenu.classList.remove("show-menu");
  };
  navLinks.forEach((link) => link.addEventListener("click", linkAction)); // Updated variable nam

  /*== SHADOW HEADER*/
  const shadowHeader = () => {
    const header = document.getElementById("header");
    // When the scroll is greater than 50 viewport height, add the
    window.scrollY >= 50
      ? header.classList.add("shadow-header")
      : header.classList.remove("shadow-header");
  };

  window.addEventListener("scroll", shadowHeader);
  
  /*====Function Anecdotes=====*/
  function displayAnecdote() {
    var numberInput = document.getElementById("numberInput").value;
    var anecdoteText = document.getElementById("anecdoteText");

    // Ajoutez vos anecdotes en fonction des nombres ici
    var anecdotes = [
      "Je ne savais pas que j'étais allergique aux crevettes... jusqu'au jour où j'ai vomi trois fois dans les toilettes d'un restaurant chinois.",
      "Je me suis brûlé 5 fois à 5 endroits différents. Si vous vous demandez où étaient mes parents, ce n'est pas de leur faute. J'étais juste vraiment turbulent.",
      "J'ai lu plus de 300 œuvres littéraires. Non, ce n'est pas une blague, mais pour précision, je parle de mangas, de light novels, de manhwas et d’œuvres littéraires classiques.",
      "J'ai vécu dans trois pays différents de l'Afrique de l'Ouest : le Mali, le Niger et le Tchad. P.S. : Je suis Nigérien.",
      "Quand j'étais petit, pendant très longtemps, j'ai cru que lorsque qu'il pleuvait, c'était Dieu qui faisait pipi sur nous... Ah, la jeunesse.",
      "J'ai très peur des mantes religieuses. Je ne sais pas s'il existe une phobie pour ça, mais je crois bien que je la ressens.",
      "J'ai la tête ronde et je suis imberbe, donc à chaque fois que je coupe mes cheveux trop court, je ressemble à un saladier. L'autodérision, c'est important.",
      "Je sais parler 4 langues, bientôt 5 si j'arrive à m'organiser pour apprendre l'arabe.",
      "Avant, j'avais une addiction, si on peut appeler ça une addiction, c'étaient les Fruit Shoots. Je pouvais en boire 3 à 4 par jour.",
      "Je viens de donner 9 anecdotes. Si vous êtes arrivé là, le meilleur conseil que je puisse vous donner, c'est de me contacter pour parler.",
    ];

    // Vérifiez si le nombre est valide
    if (numberInput >= 1 && numberInput <= 10) {
      // Affichez l'anecdote correspondante
      anecdoteText.innerText = anecdotes[numberInput - 1];
    } else {
      anecdoteText.innerText = "Veuillez choisir un nombre entre 1 et 10.";
    }
  }

  /*=== EMAIL JS===*/
  const contactForm = document.getElementById("contact-form");
  const contactMessage = document.getElementById("contact-message");

  const sendEmail = (e) => {
    e.preventDefault();

    //serviceID -TemplateID - #Form - publicKey
    emailjs
      .sendForm(
        "service_gp1wl6x",
        "template_4ewl8ml",
        "#contact-form",
        "NxQnEXMJxSbDboCuJ"
      )
      .then(
        () => {
          //Montrer le message envoyer
          contactMessage.textContent = "Message envoyé avec succés ✅";

          //Enlever le message aprés 5s
          setTimeout(() => {
            contactMessage.textContent = "";
          }, 5000);

          //Effacer les inputs
          contactForm.reset();
        },
        () => {
          //Message d'erreur
          contactMessage.textContent =
            "Oupps... il y a eu une erreur lors de l'envoie du message ❎";
        }
      );
  };
  contactForm.addEventListener("submit", sendEmail);

  /*========= SHOW SCROLL UP ========= */
  const scrollUp = () => {
    const scrollUp = document.getElementById("scroll-up");
    // When the scroll is higher than 350 viewport height, add the show-scroll class to the a tag with the scrollup class
    this.scrollY >= 350
      ? scrollUp.classList.add("show-scroll")
      : scrollUp.classList.remove("show-scroll");
  };
  window.addEventListener("scroll", scrollUp);

  /*=============== SCROLL SECTIONS ACTIVE LINK ===============*/
  const sections = document.querySelectorAll("section [id]");

  const scrollActive = () => {
    const scrollDown = window.scrollY;
  
    sections.forEach((current) => {
      const sectionHeight = current.offsetHeight,
        sectionTop = current.offsetTop - 58,
        sectionId = current.getAttribute("id"),
        sectionsClass = document.querySelector('.nav__menu a[href*=' + sectionId + ']');
  
      if (sectionsClass) { // Vérifier si l'élément a été trouvé
        if (scrollDown > sectionTop && scrollDown <= sectionTop + sectionHeight) {
          sectionsClass.classList.add("active-link");
        } else {
          sectionsClass.classList.remove("active-link");
        }
      }
    });
  };
  
  window.addEventListener("scroll", scrollActive);

    /* ====== Dark Light Theme ====== */
    const themeButton = document.getElementById ('theme-button')
    const darkTheme = 'dark-theme' 
    const iconTheme= 'ri-sun-line'

    // Previously selected topic (if user selected)
    const selectedTheme = localStorage.getItem('selected-theme')
    const selectedIcon = localStorage.getItem('selected-icon')

    // We obtain the current theme that the interface has by validating the dark-theme class
    const getCurrentTheme = () => document.body.classList.contains (darkTheme) ? 'dark' : 'light'
    const getCurrentIcon = ()=> themeButton.classList.contains (iconTheme) ? 'ri-moon-line': 'ri-sun-line'

    // We validate if the user previously chose a topic
    if (selectedTheme) {
    // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark
    document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove' ] (darkTheme)
    themeButton.classList[selectedIcon === 'ri-moon-line' ? 'add' : 'remove' ] (iconTheme)
    }
    // Activate / deactivate the theme manually with the button
    themeButton.addEventListener('click', () => {
    // Add or remove the dark / icon theme
    document.body.classList.toggle(darkTheme)
    themeButton.classList.toggle (iconTheme)
    // We save the theme and the current icon that the user chose
    localStorage.setItem('selected-theme', getCurrentTheme ())
    localStorage.setItem('selected-icon', getCurrentIcon())
    })

    /*====Click pop-up====*/
    document.addEventListener("DOMContentLoaded", function () {
      const projectCards = document.querySelectorAll('.projects__card');
    
      const popUpConfig = {
        maxWidth: 500,
        translatePercentage: 50,
      };
    
      projectCards.forEach(function (card) {
        const popUpButton = card.querySelector('.projects__button');
        const popUp = card.querySelector('.pop-up');
        const popUpContainer = card.querySelector('.pop-up-container');
        const popUpCloseButton = card.querySelector('.pop-up span');
        let isPopUpVisible = false;
    
        popUp.style.display = "none";
        popUpContainer.style.display = "none";
    
        popUpButton.addEventListener("click", function (event) {
          event.preventDefault();
    
          // Positionnez le pop-up en fonction de la largeur de l'écran
          centerPopUp(popUp, popUpConfig);
    
          popUpContainer.style.display = "block";
          popUp.style.display = "block";
          isPopUpVisible = true;
        });
    
        popUpCloseButton.addEventListener("click", function () {
          hidePopUp();
          isPopUpVisible = false;
        });
    
        // Ajoutez un gestionnaire d'événements de défilement
        window.addEventListener("scroll", function () {
          // Vérifiez si le bas de l'écran est en dessous de l'article
          const cardRect = card.getBoundingClientRect();
          const screenHeight = window.innerHeight;
    
          if (!isPopUpVisible && (cardRect.bottom < 2 || cardRect.top > screenHeight)) {
            // Cachez le pop-up si l'article n'est pas visible à l'écran
            hidePopUp();
          }
        });
    
        // Ajoutez un gestionnaire d'événements de redimensionnement de fenêtre
        window.addEventListener("resize", function () {
          if (isPopUpVisible) {
            // Si le pop-up est actuellement visible, recentrez-le lors du redimensionnement de la fenêtre
            centerPopUp(popUp, popUpConfig);
          }
        });
      });
    
      // Ajoutez un gestionnaire d'événements pour cacher le pop-up lors du clic en dehors de celui-ci
      document.addEventListener("click", function (event) {
        const isClickInsidePopUp = event.target.closest('.pop-up');
        if (!isClickInsidePopUp && isPopUpVisible) {
          hidePopUp();
          isPopUpVisible = false;
        }
      });
    
      function hidePopUp() {
        document.querySelectorAll('.pop-up-container').forEach(function (popUpContainer) {
          popUpContainer.style.display = "none";
        });
        document.querySelectorAll('.pop-up').forEach(function (popUp) {
          popUp.style.display = "none";
        });
      }
    
      function centerPopUp(popUp, config) {
        const windowWidth = window.innerWidth;
    
        if (windowWidth <= 768) {
          // Pour les petits écrans, centrez le pop-up horizontalement et verticalement
          popUp.style.top = "50%";
          popUp.style.left = "50%";
          popUp.style.transform = "translate(0%, 0%)";
        } else {
          // Pour les écrans plus larges, utilisez la logique précédente
          popUp.style.top = "50%";
          popUp.style.left = "50%";
          popUp.style.transform = `translate(-${config.translatePercentage}%, -50%)`;
        }
    
        popUp.style.maxWidth = `${config.maxWidth}px`;
      }
    });
    
    /*===Voir plus===*/ 

    // Récupérer les éléments du DOM
    const experienceSection = document.getElementById('experience');
    const voirPlusBtn = document.getElementById('voirPlusBtn');

    // Ajouter un gestionnaire d'événements au clic sur le bouton "Voir plus"
    voirPlusBtn.addEventListener('click', function () {
      // Inverser l'état d'affichage du texte caché
      experienceSection.classList.toggle('hidden');
      
      // Changer le texte du bouton en fonction de l'état
      voirPlusBtn.textContent = experienceSection.classList.contains('hidden') ? 'Voir plus' : 'Voir moins';
    });

    const experienceSection1 = document.getElementById('experience1');
    const voirPlusBtn1 = document.getElementById('voirPlusBtn1');

    // Ajouter un gestionnaire d'événements au clic sur le bouton "Voir plus"
    voirPlusBtn1.addEventListener('click', function () {
      // Inverser l'état d'affichage du texte caché
      experienceSection1.classList.toggle('hidden');
      
      // Changer le texte du bouton en fonction de l'état
      voirPlusBtn1.textContent = experienceSection1.classList.contains('hidden') ? 'Voir plus' : 'Voir moins';
    });

    const experienceSection2 = document.getElementById('experience2');
    const voirPlusBtn2 = document.getElementById('voirPlusBtn2');

    // Ajouter un gestionnaire d'événements au clic sur le bouton "Voir plus"
    voirPlusBtn2.addEventListener('click', function () {
      // Inverser l'état d'affichage du texte caché
      experienceSection2.classList.toggle('hidden');
      
      // Changer le texte du bouton en fonction de l'état
      voirPlusBtn2.textContent = experienceSection2.classList.contains('hidden') ? 'Voir plus' : 'Voir moins';
    });

    const experienceSection3 = document.getElementById('experience3');
    const voirPlusBtn3 = document.getElementById('voirPlusBtn3');

    // Ajouter un gestionnaire d'événements au clic sur le bouton "Voir plus"
    voirPlusBtn3.addEventListener('click', function () {
      // Inverser l'état d'affichage du texte caché
      experienceSection3.classList.toggle('hidden');
      
      // Changer le texte du bouton en fonction de l'état
      voirPlusBtn3.textContent = experienceSection3.classList.contains('hidden') ? 'Voir plus' : 'Voir moins';
    });

    /*== SCROLL REVEAL ANIMATION */
    const sr = ScrollReveal({
      origin: 'top',
      distance: '60px',
      duration: 2500,
      delay: 400,
    });
    
    sr.reveal(`.home__perfil, .about__image, .contact__mail`, {origin: 'right'});
    sr.reveal(`
      .home__name, 
      .home__info,
      .about__container .section__title-1, 
      .about__info,
      .contact__social, 
      .contact__data
    `, {origin: 'left'});
    
    sr.reveal(`.services__card, .projects__card`, {interval: 100});
    
</script>
